<div class="ui bottom attached tab segment" data-tab="sorting">
  <div class="ui grid">
    <div class="eight wide column">
      <div class="page-sub-heading">
        <h3>Default Sorting</h3>
      </div>

      <div class="ui short hidden divider"></div>

      <div class="grouped fields">
        <label>By default, sort products by:</label>
        <div class="field">
          <div class="ui radio checkbox">
            <%= f.radio_button :sort_type, Condition.sort_types.none, data: { refresh_form: true } %>
            <label>System default (product ID number)</label>
          </div>
        </div>
        <div class="field">
          <div class="ui radio checkbox">
            <%= f.radio_button :sort_type, Condition.sort_types.random, data: { refresh_form: true } %>
            <label>Random order</label>
          </div>
        </div>
        <div class="field">
          <div class="ui radio checkbox">
            <%= f.radio_button :sort_type, Condition.sort_types.field, data: { refresh_form: true } %>
            <label>A specified field</label>
          </div>
          <div class="ui segment nested-fields <%= 'disabled' unless condition.sort_type == Condition.sort_types.field %>">
            <% if condition.default_sort_field.try(:incomplete_data?) %>
              <%= render 'sort_warning', incomplete_sort_fields: [condition.default_sort_field] %>
            <% end %>
            <div class="equal width fields">
              <div class="field">
                <%= f.label :default_sort_field_id, 'Field' %>
                <%=
                  f.collection_select(
                    :default_sort_field_id,
                    ProductSortField.all,
                    :id,
                    :description,
                    { include_blank: true },
                    class: 'ui dropdown',
                    data: { refresh_form: true }
                  )
                %>
              </div>
              <div class="field">
                <%= f.label :default_sort_order, 'Order' %>
                <%=
                  f.select(
                    :default_sort_order,
                    [['Ascending', 'asc'], ['Descending', 'desc']],
                    {},
                    class: 'ui dropdown'
                  )
                %>
              </div>
            </div>
          </div>
        </div>
        <div class="field">
          <div class="ui radio checkbox">
            <%= f.radio_button :sort_type,  Condition.sort_types.calculation, data: { refresh_form: true } %>
            <label>The following calculation</label>
          </div>
          <div class="ui segment nested-calculator <%= 'disabled' unless condition.sort_type == Condition.sort_types.calculation %>">
            <div
              data-calculator
              data-variables="<%= VariableSerializer.new(condition.sort_equation_variables).serialize %>"
              data-input-name="condition[sort_equation_tokens]"
              data-tokens="<%= condition.sort_equation_tokens || [] %>"
              data-equation-type="<%= Equation.types.sort %>"
            ></div>
          </div>
        </div>
        <div class="field">
          <div class="ui radio checkbox">
            <%= f.radio_button :sort_type,  Condition.sort_types.file, data: { refresh_form: true } %>
            <label>A custom sort file</label>
          </div>
          <div class="ui segment nested-fields <%= 'disabled' unless condition.sort_type == Condition.sort_types.file %>">
            <div class="page-heading">
              <div class="heading-buttons">
                <%=
                  link_to(
                    sorting_condition_product_download_path(condition),
                    class: 'ui tiny right floated button',
                    data: { loading_spinner: true, remote: true }
                  ) do
                %>
                  <i class="download icon"></i> Download Template
                <% end %>
              </div>
            </div>

            <div class="ui short hidden divider"></div>

            <p>
              To specify a customized sort order on a per-participant level,
              download the file template by using the button above. For each row,
              list the ID of the participant you are specifying sorting for
              (the session ID the participant enters before viewing the store)
              in the "Participant ID" column, and the sort rank of the product
              in the "Product Rank" column.  To provide sorting data for
              multiple participants, add additional rows (one for each Product Id)
              to the end of the file.
            </p>
            <p>
              Once you have added the participant sorting data, re-upload the
              file below and save. The current file will appear on the left with
              a check box next to it. To remove the current file, uncheck the
              box and click "Save". To replace the file, upload a new file
              ("Replace file") and click "Save". Removed and replaced files will
             appear below.
            </p>

            <div class="field">
              <label>Current file</label>
              <% if condition.current_sort_file %>
                <%= f.fields_for :sort_files, condition.current_sort_file do |sort_fields| %>
                  <div class="ui inline checkbox field">
                    <%= sort_fields.check_box(:active) %>
                    <%= sort_fields.label(:active) do %>
                      <%= ConfigFilePresenter.download_link(condition.current_sort_file) %>
                    <% end %>
                  </div>
                <% end %>
              <% else %>
                None
              <% end %>
            </div>

            <div class="ui short hidden divider"></div>

            <div class="field">
              <%= f.label :new_sort_file, 'Replace file' %>
              <%= f.file_field :new_sort_file %>
            </div>

            <%=
              render(
                'config_files/historical_files_table',
                files: condition.sort_files.historical,
                header_type: :h5
              )
            %>
          </div>
        </div>
      </div>
    </div>
    <div class="eight wide column">
      <div class="page-sub-heading">
        <h3>Sorting by Participant</h3>
      </div>

      <div class="ui short hidden divider"></div>

      <div class="field">
        <% if condition.incomplete_sort_fields.any? %>
          <%= render 'sort_warning', incomplete_sort_fields: condition.incomplete_sort_fields %>
        <% end %>
        <%= f.label :product_sort_field_ids, 'Allow participants to sort products by:' %>
        <%=
          f.collection_select(
            :product_sort_field_ids,
            ProductSortField.all,
            :id,
            :description,
            {},
            class: 'ui dropdown',
            multiple: true,
            data: { refresh_form: true }
          )
        %>
      </div>
    </div>
  </div>
</div>
